{
    "name": "Ecsanywhere-deploy-cicd",
    "source": {
        "type": "NO_SOURCE",                
        "buildspec": "version: 0.2\n\nphases:\n  build:\n    commands:\n      - export IMAGE_REPO_NAME=$ECR_REPO\n      - export ECR_IMAGE=\"${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}:${CODEBUILD_RESOLVED_SOURCE_VERSION}\"\n      - export TASK_FAMILY=cicd\n      - export CLUSTER_NAME=${CLUSTER_NAME}\n      - export SERVICE_NAME=cicd\n  post_build:\n    commands:\n      - \"#!/bin/bash\"\n      - \"set -e\"\n      - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition \"$TASK_FAMILY\" --region \"$AWS_DEFAULT_REGION\")\n      - NEW_TASK_DEFINTIION=$(echo $TASK_DEFINITION | jq --arg IMAGE \"$ECR_IMAGE\" '.taskDefinition | .containerDefinitions[0].image = $IMAGE | del(.taskDefinitionArn) | del(.revision) | del(.status) | del(.requiresAttributes) | del(.compatibilities) | del(.registeredBy) | del(.registeredAt)')\n      - NEW_TASK_INFO=$(aws ecs register-task-definition --region \"$AWS_DEFAULT_REGION\" --cli-input-json \"$NEW_TASK_DEFINTIION\")\n      - NEW_REVISION=$(echo $NEW_TASK_INFO | jq '.taskDefinition.revision')\n      - aws ecs update-service --cluster ${CLUSTER_NAME} --service ${SERVICE_NAME} --task-definition ${TASK_FAMILY}:${NEW_REVISION}\n      - aws ecs list-tasks --cluster ${CLUSTER_NAME} | jq -r \".taskArns[]\" | awk '{print \"aws ecs stop-task --cluster ${CLUSTER_NAME} --task \\\"\"$0\"\\\"\"}' | sh"
    },
    "sourceVersion": "refs/heads/master",
    "artifacts": {
        "type": "NO_ARTIFACTS"        
    },
    "environment": {
        "type": "LINUX_CONTAINER",
        "image": "aws/codebuild/standard:5.0",
        "computeType": "BUILD_GENERAL1_SMALL",
        "environmentVariables": [],
        "privilegedMode": true,
        "imagePullCredentialsType": "CODEBUILD"
    },
    "serviceRole": "ecs-a-code-deploy-role",
    "logsConfig": {
        "cloudWatchLogs": {
            "status": "ENABLED"
        },
        "s3Logs": {
            "status": "DISABLED",
            "encryptionDisabled": false
        }
    }
}